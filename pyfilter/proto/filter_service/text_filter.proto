syntax = "proto3";

package filter_transport;

message SingleTextFilterRequest {
  string input_string = 1;
  bool casefold = 2;
}

message SingleTextFilterResponse {
  bool passed_filter = 1;
}

message MultiFilterResponse {
  repeated string passed_inputs = 1;
}

message WebpageFilterRequest {
  string url = 1;
  optional uint32 port = 2;
  map<string, string> headers = 3;
  map<string, string> params = 4;
  bool casefold = 5;
}
// TODO: Implement a crawler filter which returns a stream of sub-pages passing the filter

service TextFilterService {
  // Send one text input and receive a boolean response whether it passed the filter or not
  rpc SingleFilter(SingleTextFilterRequest) returns (SingleTextFilterResponse) {}

  // Send a stream of text inputs and receive an array of the outputs which passed the filter
  rpc MultiFilter(stream SingleTextFilterRequest) returns (MultiFilterResponse) {}

  // Send a stream of text inputs and receive a stream of pass/fail booleans for each one
  rpc MultiFilterStream(stream SingleTextFilterRequest) returns (stream SingleTextFilterResponse) {}

  // Invoke the web filter method and return whether the webpage passes the filter
  rpc WebpageFilter(WebpageFilterRequest) returns (SingleTextFilterResponse) {}
}