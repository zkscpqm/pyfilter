# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pyfilter.src.transport.proto.filter_service import filter_web_api_pb2 as filter__service_dot_filter__web__api__pb2


class TextFilterManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetKeywords = channel.unary_unary(
                '/filter_manager.TextFilterManager/GetKeywords',
                request_serializer=filter__service_dot_filter__web__api__pb2.GetKeywordsRequest.SerializeToString,
                response_deserializer=filter__service_dot_filter__web__api__pb2.GetKeywordsResponse.FromString,
                )
        self.SetKeywords = channel.unary_unary(
                '/filter_manager.TextFilterManager/SetKeywords',
                request_serializer=filter__service_dot_filter__web__api__pb2.SetKeywordsRequest.SerializeToString,
                response_deserializer=filter__service_dot_filter__web__api__pb2.SetKeywordsResponse.FromString,
                )
        self.UpdateKeywords = channel.unary_unary(
                '/filter_manager.TextFilterManager/UpdateKeywords',
                request_serializer=filter__service_dot_filter__web__api__pb2.UpdateKeywordsRequest.SerializeToString,
                response_deserializer=filter__service_dot_filter__web__api__pb2.UpdateKeywordsResponse.FromString,
                )
        self.DeleteKeywords = channel.unary_unary(
                '/filter_manager.TextFilterManager/DeleteKeywords',
                request_serializer=filter__service_dot_filter__web__api__pb2.DeleteKeywordsRequest.SerializeToString,
                response_deserializer=filter__service_dot_filter__web__api__pb2.DeleteKeywordsResponse.FromString,
                )


class TextFilterManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetKeywords(self, request, context):
        """Get a mapping of the keywords currently set on the filter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetKeywords(self, request, context):
        """Set new keywords on the filter and return the new mappings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateKeywords(self, request, context):
        """Update the list with new keywords and returns the updated mappings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKeywords(self, request, context):
        """Deletes specified keywords and returns the updated mappings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextFilterManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKeywords,
                    request_deserializer=filter__service_dot_filter__web__api__pb2.GetKeywordsRequest.FromString,
                    response_serializer=filter__service_dot_filter__web__api__pb2.GetKeywordsResponse.SerializeToString,
            ),
            'SetKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.SetKeywords,
                    request_deserializer=filter__service_dot_filter__web__api__pb2.SetKeywordsRequest.FromString,
                    response_serializer=filter__service_dot_filter__web__api__pb2.SetKeywordsResponse.SerializeToString,
            ),
            'UpdateKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateKeywords,
                    request_deserializer=filter__service_dot_filter__web__api__pb2.UpdateKeywordsRequest.FromString,
                    response_serializer=filter__service_dot_filter__web__api__pb2.UpdateKeywordsResponse.SerializeToString,
            ),
            'DeleteKeywords': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKeywords,
                    request_deserializer=filter__service_dot_filter__web__api__pb2.DeleteKeywordsRequest.FromString,
                    response_serializer=filter__service_dot_filter__web__api__pb2.DeleteKeywordsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'filter_manager.TextFilterManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TextFilterManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/filter_manager.TextFilterManager/GetKeywords',
            filter__service_dot_filter__web__api__pb2.GetKeywordsRequest.SerializeToString,
            filter__service_dot_filter__web__api__pb2.GetKeywordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/filter_manager.TextFilterManager/SetKeywords',
            filter__service_dot_filter__web__api__pb2.SetKeywordsRequest.SerializeToString,
            filter__service_dot_filter__web__api__pb2.SetKeywordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/filter_manager.TextFilterManager/UpdateKeywords',
            filter__service_dot_filter__web__api__pb2.UpdateKeywordsRequest.SerializeToString,
            filter__service_dot_filter__web__api__pb2.UpdateKeywordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKeywords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/filter_manager.TextFilterManager/DeleteKeywords',
            filter__service_dot_filter__web__api__pb2.DeleteKeywordsRequest.SerializeToString,
            filter__service_dot_filter__web__api__pb2.DeleteKeywordsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
